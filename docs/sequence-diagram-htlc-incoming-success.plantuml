@startuml
skinparam BoxPadding 20

legend top
\t\t\t\tHashedTimelockERC20 Contract: **Incoming** Flow
(Router settles with preimage before the timelock expires and funds remain on the contract)
end legend

box "Ethereum Network" #A9C5E6
participant Counterparty as counterparty << Account >>
participant Router as router << Account >>
participant ForwardHashedTimelockERC20 as htlc << HTLC >>
participant ERC20Contract as token << Token >>
participant Events as events
end box

note right of htlc
State stored:
  bool incoming;
  address counterparty;
  address tokenContract;
  uint amount;
  bytes32 hashlock;
  uint timelock; // UNIX ts
end note

counterparty->token:approve(htlc address, amount)
token->counterparty

counterparty->htlc:RequestRouting(\n\tincoming\n\tcounterparty,\n\thashlock,\n\ttimelock,\n\ttokenContract,\n\tamount\n)

activate htlc
  htlc->token:transferFrom(counterparty, htlc address, amount)
  token->htlc
  htlc->events:LogHTLCERC20New(locks, values, etc.)
  htlc->counterparty:hashlock
deactivate htlc

counterparty->router:submits BOLT11
router->router:knows/obtains secret preimage\n[sha256(secret preimage) == hashlock]

router->htlc:settle(secret preimage)

activate htlc
  htlc->events:LogHTLCERC20Settle(secret preimage)
  htlc->htlc:funds stay in contract for Outgoing swap
deactivate htlc

@enduml
